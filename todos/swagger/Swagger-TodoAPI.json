{
  "openapi": "3.0.0",
  "info": {
    "title": "TodoAPI",
    "description": "A simple TodoAPI",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/JJONASSON/TodoAPI/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Todo"
    }
  ],
  "paths": {
    "/todos": {
      "get": {
        "tags": [
          "Todo"
        ],
        "summary": "returns all todos",
        "description": "Returns all the todos in the system\n",
        "operationId": "allTodos",
        "responses": {
          "200": {
            "description": "All todos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "post": {
        "tags": [
          "Todo"
        ],
        "summary": "adds a todo item",
        "description": "Adds a todo item to the system",
        "operationId": "addTodo",
        "requestBody": {
          "description": "Todo item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Todo created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing todo item already exists"
          }
        }
      }
    },
    "/todos/{id}": {
      "get": {
        "tags": [
          "Todo"
        ],
        "summary": "Find todo by id",
        "description": "Returns todo with given id, if exists\n",
        "operationId": "getTodoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to return",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied"
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "put": {
        "summary": "update todo by id",
        "description": "Update todo with given id, if exists\n",
        "operationId": "updateTodoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent todo in the system",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfull update!"
          },
          "400": {
            "description": "Invalid input supplied"
          },
          "404": {
            "description": "Todo not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Todo"
        ],
        "summary": "Delete todo by id",
        "description": "Deletes todo with given id, if exists\n",
        "operationId": "deleteTodoById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of todo to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input supplied"
          },
          "404": {
            "description": "Todo not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Todo": {
        "required": [
          "description",
          "summary"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "summary": {
            "type": "string",
            "example": "This is a summary"
          },
          "description": {
            "type": "string",
            "example": "This is a description"
          }
        }
      }
    }
  }
}